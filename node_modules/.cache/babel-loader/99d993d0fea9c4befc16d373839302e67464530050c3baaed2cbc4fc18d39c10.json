{"ast":null,"code":"import axios from 'axios';\nexport const getUserStoryById = async id => {\n  try {\n    console.log(id);\n    const response = await axios.get(`http://localhost:4000/userStory/${id}`);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n    return {\n      error: e\n    };\n  }\n};\nexport const addUserStory = async userStory => {\n  try {\n    const response = await axios.post('http://localhost:4000/newUserStory/', userStory);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n    return {\n      error: e\n    };\n  }\n};","map":{"version":3,"names":["axios","getUserStoryById","id","console","log","response","get","data","e","error","addUserStory","userStory","post"],"sources":["D:/Ing 5/SI/webStoriesApp/webStories/Frontend/src/features/apiCalls.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getUserStoryById = async(id) =>{\r\n    try{\r\n        console.log(id);\r\n        const response = await axios.get(`http://localhost:4000/userStory/${id}`);\r\n        return response.data;\r\n    }catch(e){\r\n        console.log(e);\r\n        return {error:e};\r\n    }\r\n};\r\n\r\nexport const addUserStory = async (userStory) =>{\r\n    try{\r\n        const response = await axios.post('http://localhost:4000/newUserStory/', userStory);\r\n        return response.data;\r\n    }catch(e){\r\n        console.log(e);\r\n        return {error:e};\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAG,MAAMC,EAAE,IAAI;EACxC,IAAG;IACCC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACf,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,mCAAkCJ,EAAG,EAAC,CAAC;IACzE,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC,QAAMC,CAAC,EAAC;IACLL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;IACd,OAAO;MAACC,KAAK,EAACD;IAAC,CAAC;EACpB;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,SAAS,IAAI;EAC5C,IAAG;IACC,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAC,qCAAqC,EAAED,SAAS,CAAC;IACnF,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,QAAMC,CAAC,EAAC;IACLL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;IACd,OAAO;MAACC,KAAK,EAACD;IAAC,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}